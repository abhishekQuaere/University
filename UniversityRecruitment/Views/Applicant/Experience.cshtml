@model UniversityRecruitment.Models.Experience
@{
    ViewBag.Title = "Experience";
    Layout = "~/Views/Shared/_ApplicantLayout.cshtml";
}
<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h3 class="text-themecolor">
            Experience
        </h3>
        <p>Teaching / Post Doctorial / Award / Fellowship & Experience Details</p>
    </div>
    <div class="col-md-7 align-self-center">

    </div>
</div>



<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header bg-info">
                    <h4 class="m-b-0 text-white"><b>EDUCATIONAL QUALIFICATION</b></h4>
                </div>
                <div class="card-body">

                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="col-sm-12">Designation</label>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(m => m.Designation, new { @class = "form-control", @Id = "Designation", @name = "Designation" })
                                    @*<span id="body_reqAppointmentDesignation" class="validator" style="display:none;">enter value</span>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="col-sm-12">Nature of Post</label>
                                <div class="col-sm-12">
                                    @Html.DropDownListFor(Model => Model.NatureofPost, new List<SelectListItem>
                                               {
                                                   new SelectListItem{ Text="Permanent", Value = "Permanent" },
                                                     new SelectListItem{ Text="Contractual", Value = "Contractual" },
                                                     new SelectListItem{ Text="Part-Time", Value = "Part-Time" },
                                               }, "--Select--", new { @class = "form-control", @autocomplete = "off", })
                                    @*<select id=" ddlAppointmentNature" class="form-control">
                                            <option value="-1">-- select --</option>
                                            <option value="Permanent">Permanent</option>
                                            <option value="Contractual">Contractual</option>
                                            <option value="Part-Time">Part-Time</option>

                                        </select>*@
                                    @*<span id="body_reqAppointmentNature" class="validator" style="display:none;">select an item</span>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="col-sm-12">Salary with Grade / AGP</label>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(m => m.GradeAgp, new { @class = "form-control", @Id = "GradeAgp", @name = "GradeAgp" })
                                    @*<span id="body_reqAppointmentSalary" class="validator" style="display:none;">enter value</span>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                <label class="col-sm-12">Employer Name &amp; Address</label>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(m => m.NameAddress, new { @class = "form-control", @Id = "NameAddress", @name = "NameAddress" })
                                    @*<span id="body_reqAppointmentEmployer" class="validator" style="display:none;">enter value</span>*@
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="col-sm-12">Period From</label>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(m => m.DesignationPeriodFrom, new { @class = "form-control floating", @type = "date", })

                                    @*<input type="hidden" name="ctl00$body$txtAppointmentFrom_Watermark_ClientState" id="body_txtAppointmentFrom_Watermark_ClientState">
                                        <span id="body_regAppointmentFrom" class="validator" style="display:none;">enter date in DD/MM/YYYY format</span>
                                        <span id="body_reqAppointmentFrom" class="validator" style="display:none;">enter value</span>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="col-sm-12">To</label>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(m => m.DesignationPeriodTo, new { @class = "form-control floating", @type = "date", })

                                    @*<input type="hidden" name="ctl00$body$txtAppointmentTo_Watermark_ClientState" id="body_txtAppointmentTo_Watermark_ClientState">
                                        <span id="body_reqAppointmentTo" class="validator" style="display:none;">enter value</span>
                                        <span id="body_regAppointmentTo" class="validator" style="display:none;">enter date in DD/MM/YYYY format</span>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="col-sm-12">Upload Scanned Attachment</label>
                                <div class="col-sm-12">
                                    <input type="file" class="form-control" id="DesignationImage" onchange="Fileupload(this)">
                                    <span id="DesignationImageAnchor" style="display: none;" class="input-group-text btn-download"></span>
                                    @*<span id="body_reqAppointmentUpload" class="validator" style="display:none;">upload file</span>*@
                                </div>
                                <span class="smallpdf">(File Format:JPG/JPEG and PDF । Max File Size: 2 MB)</span>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="col-sm-12">&nbsp;</label>
                                <div class="col-sm-12">
                                    <a class="btn btn-primary btn-shadow" href="#" onclick="AddDesignationExperience()"><span class="fa fa-plus-circle"></span> Add</a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">

                            <div class="table-responsive" id="tab">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr class="table-primary">
                                            <th rowspan="2">Designation</th>
                                            <th rowspan="2">Nature of Post</th>
                                            <th rowspan="2">Salary with Grade / AGP</th>
                                            <th rowspan="2">Name &amp; Address of Employer</th>
                                            <th colspan="3">Period of Experience</th>
                                            <th rowspan="2">Attachment</th>
                                            <th rowspan="2"></th>
                                        </tr>
                                        <tr class="table-primary">
                                            <th>From</th>
                                            <th colspan="2">To</th>
                                            @*<th>Duration</th>*@
                                        </tr>

                                    </thead>
                                    <tbody id="TblDesignation">
                                        @if (Model != null)
                                        {
                                            if (Model.Designationlist.Count() > 0)
                                            {
                                                foreach (var itm in Model.Designationlist)
                                                {
                                                    <tr>
                                                        <td>@itm.Designation</td>
                                                        <td>@itm.NatureofPost</td>
                                                        <td>@itm.GradeAgp</td>
                                                        <td>@itm.NameAddress</td>
                                                        <td>@itm.DesignationPeriodFrom</td>
                                                        <td colspan="2">@itm.DesignationPeriodTo</td>
                                                        @if (!String.IsNullOrEmpty(itm.DesignationImage))
                                                        {
                                                            <td><span class='input-group-text btn-download' href="@itm.DesignationImage.Replace("~", "")"><a href="@itm.DesignationImage.Replace("~", "")" target='_blank' class='btn btn-warning dnldbtn'><i class='fa fa-download'></i></a></span></td>
                                                        }
                                                        else
                                                        {
                                                            <td></td>
                                                        }
                                                    </tr>

                                                }
                                            }
                                            else
                                            {

                                            }
                                        }

                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header bg-info">
                    <h4 class="m-b-0 text-white"><b>EDUCATIONAL QUALIFICATION</b></h4>
                </div>
                <div class="card-body">

                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="col-sm-12">Agency</label>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(m => m.Agency, new { @class = "form-control", @Id = "Agency", @name = "Agency" })
                                    @*<span id="body_reqDoctoralAgency" class="validator" style="display:none;">enter value</span>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="col-sm-12">Host Institution</label>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(m => m.HostInstitution, new { @class = "form-control", @Id = "HostInstitution", @name = "HostInstitution" })
                                    @*<span id="body_reqDoctoralHost" class="validator" style="display:none;">enter value</span>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="col-sm-12">Period From</label>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(m => m.AgencyPeriodFrom, new { @class = "form-control floating", @type = "date", })

                                    @*<input type="hidden" name="ctl00$body$txtDoctoralFrom_Watermark_ClientState" id="body_txtDoctoralFrom_Watermark_ClientState">
                                        <span id="body_regDoctoralFrom" class="validator" style="display:none;">enter date in DD/MM/YYYY format</span>
                                        <span id="body_reqDoctoralFrom" class="validator" style="display:none;">enter value</span>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="col-sm-12">To</label>
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(m => m.AgencyPeriodTo, new { @class = "form-control floating", @type = "date", })

                                    @*<input type="hidden" name="ctl00$body$txtDoctoralTo_Watermark_ClientState" id="body_txtDoctoralTo_Watermark_ClientState">
                                        <span id="body_regDoctoralTo" class="validator" style="display:none;">enter date in DD/MM/YYYY format</span>
                                        <span id="body_reqDoctoralTo" class="validator" style="display:none;">enter value</span>*@
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="col-sm-12">Upload Scanned Attachment</label>
                                <div class="col-sm-12">
                                    <input type="file" class="form-control" id="AgencyImage" onchange="UploadFile(this)">
                                    <span id="AgencyImageAnchor" style="display: none;" class="input-group-text btn-download"></span>
                                </div>
                                <span class="smallpdf">(File Format:JPG/JPEG and PDF । Max File Size: 2 MB)</span>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="col-sm-12">&nbsp;</label>
                                <div class="col-sm-12">
                                    <a class="btn btn-primary btn-shadow" href="#" onclick="AddAgencyExperience()"><span class="fa fa-plus-circle"></span> Add</a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">

                            <div class="table-responsive">
                                <table class="table table-bordered" id="tab1">
                                    <thead>
                                        <tr class="table-primary">
                                            <th rowspan="2">Agency</th>
                                            <th rowspan="2">Host Institution</th>
                                            <th colspan="3">Period of Experience</th>
                                            <th rowspan="2">Attachment</th>
                                            <th rowspan="2"></th>
                                        </tr>
                                        <tr class="table-primary">
                                            <th>From</th>
                                            <th>To</th>
                                            @*<th>Duration</th>*@
                                        </tr>

                                    </thead>
                                    <tbody id="TblAgency">
                                        @if (Model != null)
                                        {
                                            if (Model.Agencylist.Count() > 0)
                                            {
                                                foreach (var itm in Model.Agencylist)
                                                {
                                                    <tr>
                                                        <td>@itm.Agency</td>
                                                        <td>@itm.HostInstitution</td>
                                                        <td>@itm.AgencyPeriodFrom</td>
                                                        <td colspan="2">@itm.AgencyPeriodTo</td>
                                                        @if (!String.IsNullOrEmpty(itm.AgencyImage))
                                                        {
                                                            <td><span class='input-group-text btn-download' href="@itm.AgencyImage.Replace("~", "")"><a href="@itm.AgencyImage.Replace("~", "")" target='_blank' class='btn btn-warning dnldbtn'><i class='fa fa-download'></i></a></span></td>
                                                        }
                                                        else
                                                        {
                                                            <td></td>
                                                        }
                                                    </tr>

                                                }
                                            }
                                            else
                                            {

                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="card-shadow-primary col-sm-12 card bg-secondary">
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-12">
                        <a id="body_BtnSave" class="btn btn-warning text-dark shadow" href="#" onclick="Savedata()"><span class="fa fa-save"></span> Save</a>
                        <a id="body_BtnSaveNext" class="btn btn-success text-dark shadow pull-right" href="#"><span class="fa fa-save"></span> Save &amp; Next <span class="fa fa-chevron-circle-right"></span></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    function AddDesignationExperience() {
        debugger;
        var Designation = $('#Designation').val();
        var NatureofPost = $('#NatureofPost').val();
        var GradeAgp = $('#GradeAgp').val();
        var NameAddress = $('#NameAddress').val();
        var DesignationPeriodFrom = $('#DesignationPeriodFrom').val();
        var DesignationPeriodTo = $('#DesignationPeriodTo').val();
        var href = $('.anchor').attr('href');

        if ($('#Designation').val() == "" || $('#Designation').val() == null || $('#Designation').val() == undefined) {
                swal("", "please enter Designation", "warning")
                return false;
            }
            if ($('#NatureofPost').val() == "" || $('#NatureofPost').val() == null || $('#NatureofPost').val() == undefined) {
                swal("", "Please select  Nature of Post  ", "warning")
                return false;
            }
            if ($('#GradeAgp').val() == "" || $('#GradeAgp').val() == null || $('#GradeAgp').val() == undefined) {
                swal("", "please enter Salary with Grade ", "warning")
                return false;
            }
            if ($('#NameAddress').val() == "" || $('#AgencyPeriodTo').val() == null || $('#AgencyPeriodTo').val() == undefined) {
                swal("", "please enter Employer Name  Address", "warning")
                return false;
            }
            if ($('#DesignationPeriodFrom').val() == "" || $('#DesignationPeriodFrom').val() == null || $('#DesignationPeriodFrom').val() == undefined) {
                swal("", "please enter Period From ", "warning")
                return false;
        }

        if ($('#DesignationPeriodTo').val() == "" || $('#DesignationPeriodTo').val() == null || $('#DesignationPeriodTo').val() == undefined) {
                swal("", "please enter Period To ", "warning")
                return false;
        }
         if ($('#DesignationImage').val() == "" || $('#DesignationImage').val() == null || $('#DesignationImage').val() == undefined) {
                swal("", "please Upload Image ", "warning")
                return false;
            }

        var row = '<tr class="new"><td class="Desig">' + Designation + '</td><td class="NaturePost">' + NatureofPost + '</td><td class="GradeandAgp" >' + GradeAgp + '</td><td  class="NameAdd">' + NameAddress + '</td><td  class="DPeriodFrom">' + DesignationPeriodFrom + '</td><td  class="DPeriodTo">' + DesignationPeriodTo + '</td><td ></td><td><span class="input-group-text btn-download" href=' + href +'><a href=' + href +' target="_blank" class="btn btn-warning dldbtn"><i class="fa fa-download"></i></a></span></td></tr>';

        $('#TblDesignation').append(row);
        $('#Designation').val('');
        $('#NatureofPost').val('');
        $('#GradeAgp').val('');
        $('#NameAddress').val('');
        $('#DesignationPeriodFrom').val('');
        $('#DesignationPeriodTo').val('');
        $('#DesignationImage').val('');


    }



    function AddAgencyExperience() {
        debugger;
        var Agency = $('#Agency').val();
        var HostInstitution = $('#HostInstitution').val();
        var AgencyPeriodFrom = $('#AgencyPeriodFrom').val();
        var AgencyPeriodTo = $('#AgencyPeriodTo').val();
        var href = $('.anchor1').attr('href');


           if ($('#Agency').val() == "" || $('#Agency').val() == null || $('#Agency').val() == undefined) {
                swal("", "please enter Agency", "warning")
                return false;
            }
            if ($('#HostInstitution').val() == "" || $('#HostInstitution').val() == null || $('#HostInstitution').val() == undefined) {
                swal("", "Please enter   Host   Institution  ", "warning")
                return false;
            }
            if ($('#AgencyPeriodFrom').val() == "" || $('#AgencyPeriodFrom').val() == null || $('#AgencyPeriodFrom').val() == undefined) {
                swal("", "please enter   Period from ", "warning")
                return false;
            }
            if ($('#AgencyPeriodTo').val() == "" || $('#AgencyPeriodTo').val() == null || $('#AgencyPeriodTo').val() == undefined) {
                swal("", "please enter Period To", "warning")
                return false;
            }
            if ($('#AgencyImage').val() == "" || $('#AgencyImage').val() == null || $('#AgencyImage').val() == undefined) {
                swal("", "please upload   Image ", "warning")
                return false;
        }

        var row = '<tr class="new1"><td class="Agen">' + Agency + '</td><td class="HostInsti">' + HostInstitution + '</td><td  class="AgPeriodFrom">' + AgencyPeriodFrom + '</td><td class="AgPeriodTo" >' + AgencyPeriodTo + '</td><td></td><td><span class="input-group-text btn-download" href=' + href +'><a href=' + href +' target="_blank" class="btn btn-warning dnldbtn"><i class="fa fa-download"></i></a></span></td></tr>';

        $('#TblAgency').append(row);
        $('#Agency').val('');
        $('#HostInstitution').val('');
        $('#AgencyPeriodFrom').val('');
        $('#AgencyPeriodTo').val('');
        $('#AgencyImage').val('');

    }



    function Savedata() {
        debugger;

        var model = {
            Designationlist: [],
            Agencylist: []

        }

        var entrylist = [];
        var Agencyentrylist = [];
        $('.new').each(function (i, d) {
            var DesignationEntry = {};
            DesignationEntry.Designation = $(this).find('.Desig').text();
            DesignationEntry.NatureofPost = $(this).find('.NaturePost').text();
            DesignationEntry.GradeAgp = $(this).find('.GradeandAgp').text();
            DesignationEntry.NameAddress = $(this).find('.NameAdd').text();
            DesignationEntry.DesignationPeriodFrom = $(this).find('.DPeriodFrom').text();
            DesignationEntry.DesignationPeriodTo = $(this).find('.DPeriodTo').text();
            DesignationEntry.DesignationImage = $(this).find('.dldbtn').attr('href');
            entrylist.push(DesignationEntry)

        });
        $('.new1').each(function (i, d) {

            var AgencyEntry = {};
            AgencyEntry.Agency = $(this).find('.Agen').text();
            AgencyEntry.HostInstitution = $(this).find('.HostInsti').text();
            AgencyEntry.AgencyPeriodFrom = $(this).find('.AgPeriodFrom').text();
            AgencyEntry.AgencyPeriodTo = $(this).find('.AgPeriodTo').text();
            AgencyEntry.AgencyImage = $(this).find('.dnldbtn').attr('href');
            Agencyentrylist.push(AgencyEntry)



        });

         if (entrylist == 0) {
            swal("", "please fill all field", "warning")
            return false;
        }
        else if (Agencyentrylist == 0) {
            swal("", "please fill all field", "warning")
            return false;
        }
        if (entrylist != 0 && Agencyentrylist != 0) {
            $.each(entrylist, function (key, value) {

                model.Designationlist.push(value);
            })
            $.each(Agencyentrylist, function (key, value) {

                model.Agencylist.push(value);
            })
            $.ajax({
                type: 'post',
                url: '/Applicant/SaveExperienceDetails',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.ResponseCode == 0) {
                        //swal("", data.ResponseMessage, "success")
                        // $('#body_BtnSaveNext').removeClass('d-none')
                        //$('#TblDesignation').empty();
                        //$('#TblAgency').empty();
                        $.confirm({
                            title: 'success',
                            content: data.ResponseMessage,
                            buttons: {
                                Ok: function () {
                                    //$('#addMoreData').html('');
                                    //$('#btnSaveNext').show();
                                    window.location.reload();
                                }
                            }
                        });

                    }

                    else {
                        swal("", data.ResponseMessage, "warning")

                    }
                }


            })
        }


    }





    function Fileupload(obj) {
        debugger;
        var filename = $(obj)[0].files[0].name;
        var fileId = $(obj).attr("id");
        var ext = obj.value.match(/\.(.+)$/)[1];

        switch (ext) {
            case 'pdf':
            case 'jpg':
            case 'jpeg':
                var fileSize = ($("#" + fileId)[0].files[0].size / 1024 / 1024);
                if (fileSize > 2) {
                    swal("", "File size should not exceed 2 MB.\r\nफाइल का साइज़ 2 MB से अधिक नहीं होना चाहिए।", "warning");
                    return false;
                }
                else {
                    var data = new FormData();
                    var files = $("#" + fileId).get(0).files;
                    if (files.length > 0) {
                        data.append("File", files[0]);
                    }
                    $("#divLoader").show();
                    $.ajax({
                        url: '@Url.Action("UploadExperienceFile", "Applicant")',
                        type: "POST",
                        processData: false,
                        contentType: false,
                        data: data,
                        success: function (response) {
                            $("#divLoader").hide();

                            if (response != null) {
                                if (response.result) {
                                    $("#fileName" + fileId).text(filename);
                                    $("#" + fileId + "Path").val(response.fpath);
                                    var Url = response.fpath.replace('~/', '');
                                    $("#" + fileId + "Anchor").empty();
                                    $("#" + fileId + "Anchor").attr('href', Url);
                                    //$("#" + fileId + "Anchor").show();
                                    $("#" + fileId + "Anchor").append('<a href="' + '@Url.Content("~/")' + Url + '" target="_blank" class="btn btn-warning anchor"><i class="fa fa-download"></i></a>');
                                    swal("", "File upload successfully. ", "success")
                                }
                                else {
                                    swal("", response.mesg, "error")
                                }
                            }
                            else {
                                swal("", "Fail to Upload File", "error")
                            }
                            return false;

                        },
                        error: function (e) {

                            $("#divLoader").hide();
                            swal("", "An Error Occured while uploading file", "error");
                        }
                    });

                }
                break;
            default:
                swal("", 'File should be in PDF/JPG/JPEG format./फाइल PDF/JPG/JPEG प्रारूप में होनी चाहिए।', "warning");
                this.value = '';
                return false;
        }

        }

     function UploadFile(obj) {
        debugger;
        var filename = $(obj)[0].files[0].name;
        var fileId = $(obj).attr("id");
        var ext = obj.value.match(/\.(.+)$/)[1];

        switch (ext) {
            case 'pdf':
            case 'jpg':
            case 'jpeg':
                var fileSize = ($("#" + fileId)[0].files[0].size / 1024 / 1024);
                if (fileSize > 2) {
                    swal("", "File size should not exceed 2 MB.\r\nफाइल का साइज़ 2 MB से अधिक नहीं होना चाहिए।", "warning");
                    return false;
                }
                else {
                    var data = new FormData();
                    var files = $("#" + fileId).get(0).files;
                    if (files.length > 0) {
                        data.append("File", files[0]);
                    }
                    $("#divLoader").show();
                    $.ajax({
                        url: '@Url.Action("UploadAgencyFile", "Applicant")',
                        type: "POST",
                        processData: false,
                        contentType: false,
                        data: data,
                        success: function (response) {
                            $("#divLoader").hide();

                            if (response != null) {
                                if (response.result) {
                                    $("#fileName" + fileId).text(filename);
                                    $("#" + fileId + "Path").val(response.fpath);
                                    var Url = response.fpath.replace('~/', '');
                                    $("#" + fileId + "Anchor").empty();
                                    $("#" + fileId + "Anchor").attr('href', Url);
                                    //$("#" + fileId + "Anchor").show();
                                    $("#" + fileId + "Anchor").append('<a href="' + '@Url.Content("~/")' + Url + '" target="_blank" class="btn btn-warning anchor1"><i class="fa fa-download"></i></a>');
                                    swal("", "File upload successfully. ", "success")
                                }
                                else {
                                    swal("", response.mesg, "error")
                                }
                            }
                            else {
                                swal("", "Fail to Upload File", "error")
                            }
                            return false;

                        },
                        error: function (e) {

                            $("#divLoader").hide();
                            swal("", "An Error Occured while uploading file", "error");
                        }
                    });

                }
                break;
            default:
                swal("", 'File should be in PDF/JPG/JPEG format./फाइल PDF/JPG/JPEG प्रारूप में होनी चाहिए।', "warning");
                this.value = '';
                return false;
        }

    }

</script>